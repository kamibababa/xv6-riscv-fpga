(define (lookup key table)
  (let ((record (assoc key (cdr table))))
    (if record
        (cdr record)
        #f)))

(define (assoc key records)
  (cond ((null? records) #f)
        ((eq? key (car (car records))) (car records))
        (else (assoc key (cdr records)))))

(define (insert! key value table)
  (let ((record (assoc key (cdr table))))
    (if record
        (set-cdr! record value)
        (set-cdr! table
                  (cons (cons key value) (cdr table)))))
  'ok)

(define (make-table)
  (cons '*table* '()))

(define t (make-table))
(insert! 'a 10 t)
(insert! 'b 20 t)
t
(lookup 'a t)
(lookup 'b t)
(lookup 'c t)
