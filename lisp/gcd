(define (remainder a b)
	(- a (* (/ a b) b)))

(define (gcd a b)
	(if (= b 0)
		a
		(gcd b (remainder a b))))

(gcd 206 40)

(define (smallest-divisor n) (find-divisor n 2))
(define (square x) (* x x))
(define (find-divisor n test-divisor)
  (cond ((> (square test-divisor) n) n)
        ((divides? test-divisor n) test-divisor)
        (else (find-divisor n (+ test-divisor 1)))))

(define (divides? a b) (= (remainder b a) 0))

(define (prime? n)
  (= n (smallest-divisor n)))

(prime? 123)
(define (findprime x)  
      	(if (prime? x)
      		x
      		(findprime (+ x 1))))

(findprime 1000)
(findprime 10000)
