(define (abs x) (cond ((> x 0) x) ((< x 0) (- x)) ((= x 0) 0)))
(define (average x y)
  (/ (+ x y) 2))

(define tolerance 0.00001)

(define (fixed-point f first-guess)
	(define (close-enough? v1 v2)
		(< (abs (- v1 v2)) tolerance))
	(define (try guess)
		(let ((next (f guess)))
			(if (close-enough? guess next)
				next
				(try next))))
	(try first-guess))

(define (sqrt x)
	(fixed-point (lambda (y) (average y (/ x y)))
		1.0))

(sqrt 3.0)
(sqrt 9.0)
(sqrt 2.0)
