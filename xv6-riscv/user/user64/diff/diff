###############################################
../initcode.S
###############################################
1c1
< # Initial process that execs /init.
---
> # Initial process execs /init.
25c25
< .p2align 2
---
> .p2align 2,

###############################################
../usertests.c
###############################################
35c35
<   uint32 addrs[] = { 0x80000000LL, 0xffffffffffffffff };
---
>   uint32 addrs[] = { 0x80000000, 0xffffffff };
79c79
<   uint32 addrs[] = { 0x80000000LL, 0xffffffffffffffff };
---
>   uint32 addrs[] = { 0x80000000, 0xffffffff };
120c120
<   uint32 addrs[] = { 0x80000000LL, 0xffffffffffffffff };
---
>   uint32 addrs[] = { 0x80000000, 0xffffffff };
250c250
<   if(a == 0xffffffffffffffffLL) {
---
>   if(a == 0xffffffff) {
255c255
<   if ((uint32) sbrk(-8192) ==  0xffffffffffffffffLL) {
---
>   if ((uint32) sbrk(-8192) ==  0xffffffff) {
2011c2011
<     if(a == (char*)0xffffffffffffffffL){
---
>     if(a == (char*)0xffffffff){
2089c2089
<   if(c == (char*)0xffffffffffffffffL){
---
>   if(c == (char*)0xffffffff){
2206c2206
<   if(c == (char*)0xffffffffffffffffL){
---
>   if(c == (char*)0xffffffff){
2578,2583c2578,2583
<   {copyin, "copyin"},
<   {copyout, "copyout"},
<   {copyinstr1, "copyinstr1"},
<   {copyinstr2, "copyinstr2"},
<   {copyinstr3, "copyinstr3"},
<   {rwsbrk, "rwsbrk" },
---
>   //{copyin, "copyin"},
>   //{copyout, "copyout"},
>   //{copyinstr1, "copyinstr1"},
>   //{copyinstr2, "copyinstr2"},
>   //{copyinstr3, "copyinstr3"},
>   //{rwsbrk, "rwsbrk" },
2758c2758
<     write(fd, (char*)0xffffffffffL, 1);
---
>     write(fd, (char*)0xffffffff, 1);
2793c2793
<         if(a == 0xffffffffffffffffLL)
---
>         if(a == 0xffffffff)
3009c3009
<       if(a == 0xffffffffffffffff){
---
>       if(a == 0xffffffff){
3051a3052
>     printf("free0 %d\n",free0);
3052a3054
>     printf("free1 %d\n",free1);

###############################################
../zombie.c
###############################################
12c12
<     sleep(5);  // Let child exit before parent.
---
>     sleep(50);  // Let child exit before parent.

